#lang racket

(define(palindrome wordIn)
  (cond
    [(= (string-length wordIn) 0)#t]
    [(= (string-length wordIn) 1)#t]
    [(equal?(string-ref wordIn 0)(string-ref(-1 string-length wordIn)))#t]
       (palindrome(substring wordIn 1(-1 (string-length wordIn))))
        [else
         #f]))


(define (word) "Testing")
(palindrome word)

(define (casear wordIn keyVal startingPos)
  (cond
    [(=(string-length wordIn) 0)(void)]
    [(+(string-ref wordIn 0) keyVal)
